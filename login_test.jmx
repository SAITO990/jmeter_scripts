<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Login_test" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.${project.version}. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;128&quot;, &quot;Not;A=Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;128&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
          </elementProp>
          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
            <stringProp name="Header.value">1</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">okta.tst.brightmls.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">login.tst.brightmls.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">aue1t1z1codbcompretokengen.auth.us-east-1.amazoncognito.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">www.tst.brightmls.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">matrix.tst.brightmls.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <collectionProp name="DNSCacheManager.hosts"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://okta.tst.brightmls.com/oauth2/default/v1/authorize?client_id=0oakqaf0mywqpoOnb4x6&amp;code_challenge=m3KL2gGCmFDDD382Vgb9adlB4fjfSbz2Vmc4OcQFp3w&amp;code_challenge_method=S256&amp;nonce=ec5b9doVlMd65fkPz9luSnM2E4BcIzHTxPlO3No893OTAbafwdG42FtGLVW3fDCJ&amp;redirect_uri=https%3A%2F%2Flogin.tst.brightmls.com%2Fimplicit%2Fcallback&amp;response_type=code&amp;sessionToken=20111mygzTHOFEp279bxKgtgcbKS-E20ZLbrGqhykgivxOwk-6A95bn&amp;state=WkIXfJ4JMFQteZwzYbUpUtNYVM8gNClZwhDDBSwUQQXfhrG1qPNONaexiaLZDsG3&amp;scope=openid%20email%20profile%20groups%20phone">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">oauth2/default/v1/authorize</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid email profile groups phone</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sessionToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionToken</stringProp>
                  <stringProp name="Argument.value">20111mygzTHOFEp279bxKgtgcbKS-E20ZLbrGqhykgivxOwk-6A95bn</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="code_challenge_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code_challenge_method</stringProp>
                  <stringProp name="Argument.value">S256</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://login.tst.brightmls.com/implicit/callback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">WkIXfJ4JMFQteZwzYbUpUtNYVM8gNClZwhDDBSwUQQXfhrG1qPNONaexiaLZDsG3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">ec5b9doVlMd65fkPz9luSnM2E4BcIzHTxPlO3No893OTAbafwdG42FtGLVW3fDCJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">0oakqaf0mywqpoOnb4x6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="code_challenge" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">code_challenge</stringProp>
                  <stringProp name="Argument.value">m3KL2gGCmFDDD382Vgb9adlB4fjfSbz2Vmc4OcQFp3w</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">0</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://login.tst.brightmls.com/?fromURI=https%3A%2F%2Fokta.tst.brightmls.com%2Fapp%2Fbrightmlstest_cognitoproxy_1%2Fexkkq7u1nNZWA6CL94x6%2Fsso%2Fsaml%3FSAMLRequest%3DfZJBT%252BMwEIXv%252Bysi353EaQiN1QRVICRW3T0ABYlL5STT1jSxg2eCCr9%252B3bRFy4WjR%252B%252FNN3rPs6t91wbv4FBbUzARxiwAU9tGm03Blo%252B3fMquyl8zVF2b9HI%252B0Nbcw9sASMEcERx537U1OHTgHsC96xqW94uCbYl6lFGkBhAkPoVfWdW26x2Q3YHZgAmVXxYOyEEhcRGqTn1aj94YTTb02miERrrxJuw9A1hw48HaKBqvPTPsjlRISGHl9GZLXYujXfV99DUhb1ydlvfO7j9WIoL9bvd2OQjz9%252BV5nl0v8nSfRYh2BLPg7qZgq%252FSimUySyZTX1brm6TrJ%252BTRP1zyuGhXH2aWq6sxLEQe4M0jKUMGSOEl5nHORP4pMJkKKaZhe5C8seDoHnRyC9tEblMdoCzY4I61CjdKoDlBSLR%252FmfxbSS6W%252FmGxtW1Yem5Aj0AW31nWKfvYeJrrh61EqwZCmj2%252Fsn%252B3q3DIrD7JjS%252FKUpMRefjW4%252Bv1k2tdJHy9n0f9Xlqfn9%252B9T%252FgM%253D%26RelayState%3DH4sIAAAAAAAAAD2RS3PaMBSF_4vWCGRJfrEjOBQIbwIx6XQYSZYfYCzXlnHiTv975U13546-e3TnnD-AgTFoaihZraF1XZ6L_EZKdAIDwM3LVBU6KxppRmFGR1gZQxLZtGZxEln3e4TIE9dxaYDIAKnWZT0ejdq2HepaD3mVJal-5PVQqMcoYnXKFasiQ0tDCxX1zrGRx8l6ZWQCxj-BKmWR9UxZqTjLJfg1AKlhEv259GYzJGlQpu9qvs5SdvmoYlqIy-Gtac1GZjDbuzBnmyJEYHSYbb1nF-CHwwPfvTUXlH3Vy80Fh5vvou03bv3n2HaMvBsZkHg9W_i2EFX8LMrutGoO7XHCX0TCY7HYbULd6IdY1_PvJ4aahZ3n5LTdHSCZwPx0D98zH0-CM1rsM87JdHW2yHa36F4XJ2WJcFWi_f7JNM4n4TNQR9Ipks5Wv29YpjmJSsuqg3lKvo7O6wu1ZfXmhgcyxctdNQnLxY_u80Ol9nZ2PUrVV5Sbi1kjLW11lgmTm5DLSmp1l0UiiyFrdDr8X-6QPVinCqGSItOqL8Q4PMDYcrHjOthzPZM4GMcsr-UAVMYacQ_5kc8hJcSB1BYScspdSGPsug5llEtiPLRBr9SOCMHEg8Lk1BM-9HwaQ8QjhpDjMi4c8Pcfi7VnsnACAAA.H4sIAAAAAAAAAAEgAN__nYVB8WZ1PwTG08STPToe-bTO-KGGc13NcdeZejFluOJMnrYXIAAAAA.4" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fromURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fromURI</stringProp>
                  <stringProp name="Argument.value">https://okta.tst.brightmls.com/app/brightmlstest_cognitoproxy_1/exkkq7u1nNZWA6CL94x6/sso/saml?SAMLRequest=fZJBT%2BMwEIXv%2Bysi353EaQiN1QRVICRW3T0ABYlL5STT1jSxg2eCCr9%2B3bRFy4WjR%2B%2FNN3rPs6t91wbv4FBbUzARxiwAU9tGm03Blo%2B3fMquyl8zVF2b9HI%2B0Nbcw9sASMEcERx537U1OHTgHsC96xqW94uCbYl6lFGkBhAkPoVfWdW26x2Q3YHZgAmVXxYOyEEhcRGqTn1aj94YTTb02miERrrxJuw9A1hw48HaKBqvPTPsjlRISGHl9GZLXYujXfV99DUhb1ydlvfO7j9WIoL9bvd2OQjz9%2BV5nl0v8nSfRYh2BLPg7qZgq%2FSimUySyZTX1brm6TrJ%2BTRP1zyuGhXH2aWq6sxLEQe4M0jKUMGSOEl5nHORP4pMJkKKaZhe5C8seDoHnRyC9tEblMdoCzY4I61CjdKoDlBSLR%2FmfxbSS6W%2FmGxtW1Yem5Aj0AW31nWKfvYeJrrh61EqwZCmj2%2Fsn%2B3q3DIrD7JjS%2FKUpMRefjW4%2Bv1k2tdJHy9n0f9Xlqfn9%2B9T%2FgM%3D&amp;RelayState=H4sIAAAAAAAAAD2RS3PaMBSF_4vWCGRJfrEjOBQIbwIx6XQYSZYfYCzXlnHiTv975U13546-e3TnnD-AgTFoaihZraF1XZ6L_EZKdAIDwM3LVBU6KxppRmFGR1gZQxLZtGZxEln3e4TIE9dxaYDIAKnWZT0ejdq2HepaD3mVJal-5PVQqMcoYnXKFasiQ0tDCxX1zrGRx8l6ZWQCxj-BKmWR9UxZqTjLJfg1AKlhEv259GYzJGlQpu9qvs5SdvmoYlqIy-Gtac1GZjDbuzBnmyJEYHSYbb1nF-CHwwPfvTUXlH3Vy80Fh5vvou03bv3n2HaMvBsZkHg9W_i2EFX8LMrutGoO7XHCX0TCY7HYbULd6IdY1_PvJ4aahZ3n5LTdHSCZwPx0D98zH0-CM1rsM87JdHW2yHa36F4XJ2WJcFWi_f7JNM4n4TNQR9Ipks5Wv29YpjmJSsuqg3lKvo7O6wu1ZfXmhgcyxctdNQnLxY_u80Ol9nZ2PUrVV5Sbi1kjLW11lgmTm5DLSmp1l0UiiyFrdDr8X-6QPVinCqGSItOqL8Q4PMDYcrHjOthzPZM4GMcsr-UAVMYacQ_5kc8hJcSB1BYScspdSGPsug5llEtiPLRBr9SOCMHEg8Lk1BM-9HwaQ8QjhpDjMi4c8Pcfi7VnsnACAAA.H4sIAAAAAAAAAAEgAN__nYVB8WZ1PwTG08STPToe-bTO-KGGc13NcdeZejFluOJMnrYXIAAAAA.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">2354</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://okta.tst.brightmls.com/app/brightmlstest_cognitoproxy_1/exkkq7u1nNZWA6CL94x6/sso/saml?SAMLRequest=fZJBT%2BMwEIXv%2Bysi353EaQiN1QRVICRW3T0ABYlL5STT1jSxg2eCCr9%2B3bRFy4WjR%2B%2FNN3rPs6t91wbv4FBbUzARxiwAU9tGm03Blo%2B3fMquyl8zVF2b9HI%2B0Nbcw9sASMEcERx537U1OHTgHsC96xqW94uCbYl6lFGkBhAkPoVfWdW26x2Q3YHZgAmVXxYOyEEhcRGqTn1aj94YTTb02miERrrxJuw9A1hw48HaKBqvPTPsjlRISGHl9GZLXYujXfV99DUhb1ydlvfO7j9WIoL9bvd2OQjz9%2BV5nl0v8nSfRYh2BLPg7qZgq%2FSimUySyZTX1brm6TrJ%2BTRP1zyuGhXH2aWq6sxLEQe4M0jKUMGSOEl5nHORP4pMJkKKaZhe5C8seDoHnRyC9tEblMdoCzY4I61CjdKoDlBSLR%2FmfxbSS6W%2FmGxtW1Yem5Aj0AW31nWKfvYeJrrh61EqwZCmj2%2Fsn%2B3q3DIrD7JjS%2FKUpMRefjW4%2Bv1k2tdJHy9n0f9Xlqfn9%2B9T%2FgM%3D&amp;RelayState=H4sIAAAAAAAAAD2RS3PaMBSF_4vWCGRJfrEjOBQIbwIx6XQYSZYfYCzXlnHiTv975U13546-e3TnnD-AgTFoaihZraF1XZ6L_EZKdAIDwM3LVBU6KxppRmFGR1gZQxLZtGZxEln3e4TIE9dxaYDIAKnWZT0ejdq2HepaD3mVJal-5PVQqMcoYnXKFasiQ0tDCxX1zrGRx8l6ZWQCxj-BKmWR9UxZqTjLJfg1AKlhEv259GYzJGlQpu9qvs5SdvmoYlqIy-Gtac1GZjDbuzBnmyJEYHSYbb1nF-CHwwPfvTUXlH3Vy80Fh5vvou03bv3n2HaMvBsZkHg9W_i2EFX8LMrutGoO7XHCX0TCY7HYbULd6IdY1_PvJ4aahZ3n5LTdHSCZwPx0D98zH0-CM1rsM87JdHW2yHa36F4XJ2WJcFWi_f7JNM4n4TNQR9Ipks5Wv29YpjmJSsuqg3lKvo7O6wu1ZfXmhgcyxctdNQnLxY_u80Ol9nZ2PUrVV5Sbi1kjLW11lgmTm5DLSmp1l0UiiyFrdDr8X-6QPVinCqGSItOqL8Q4PMDYcrHjOthzPZM4GMcsr-UAVMYacQ_5kc8hJcSB1BYScspdSGPsug5llEtiPLRBr9SOCMHEg8Lk1BM-9HwaQ8QjhpDjMi4c8Pcfi7VnsnACAAA.H4sIAAAAAAAAAAEgAN__nYVB8WZ1PwTG08STPToe-bTO-KGGc13NcdeZejFluOJMnrYXIAAAAA.4&amp;loopCount=1" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">app/brightmlstest_cognitoproxy_1/exkkq7u1nNZWA6CL94x6/sso/saml</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario">
              <collectionProp name="Arguments.arguments">
                <elementProp name="SAMLRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">SAMLRequest</stringProp>
                  <stringProp name="Argument.value">fZJBT+MwEIXv+ysi353EaQiN1QRVICRW3T0ABYlL5STT1jSxg2eCCr9+3bRFy4WjR+/NN3rPs6t91wbv4FBbUzARxiwAU9tGm03Blo+3fMquyl8zVF2b9HI+0Nbcw9sASMEcERx537U1OHTgHsC96xqW94uCbYl6lFGkBhAkPoVfWdW26x2Q3YHZgAmVXxYOyEEhcRGqTn1aj94YTTb02miERrrxJuw9A1hw48HaKBqvPTPsjlRISGHl9GZLXYujXfV99DUhb1ydlvfO7j9WIoL9bvd2OQjz9+V5nl0v8nSfRYh2BLPg7qZgq/SimUySyZTX1brm6TrJ+TRP1zyuGhXH2aWq6sxLEQe4M0jKUMGSOEl5nHORP4pMJkKKaZhe5C8seDoHnRyC9tEblMdoCzY4I61CjdKoDlBSLR/mfxbSS6W/mGxtW1Yem5Aj0AW31nWKfvYeJrrh61EqwZCmj2/sn+3q3DIrD7JjS/KUpMRefjW4+v1k2tdJHy9n0f9Xlqfn9+9T/gM=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="RelayState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RelayState</stringProp>
                  <stringProp name="Argument.value">H4sIAAAAAAAAAD2RS3PaMBSF_4vWCGRJfrEjOBQIbwIx6XQYSZYfYCzXlnHiTv975U13546-e3TnnD-AgTFoaihZraF1XZ6L_EZKdAIDwM3LVBU6KxppRmFGR1gZQxLZtGZxEln3e4TIE9dxaYDIAKnWZT0ejdq2HepaD3mVJal-5PVQqMcoYnXKFasiQ0tDCxX1zrGRx8l6ZWQCxj-BKmWR9UxZqTjLJfg1AKlhEv259GYzJGlQpu9qvs5SdvmoYlqIy-Gtac1GZjDbuzBnmyJEYHSYbb1nF-CHwwPfvTUXlH3Vy80Fh5vvou03bv3n2HaMvBsZkHg9W_i2EFX8LMrutGoO7XHCX0TCY7HYbULd6IdY1_PvJ4aahZ3n5LTdHSCZwPx0D98zH0-CM1rsM87JdHW2yHa36F4XJ2WJcFWi_f7JNM4n4TNQR9Ipks5Wv29YpjmJSsuqg3lKvo7O6wu1ZfXmhgcyxctdNQnLxY_u80Ol9nZ2PUrVV5Sbi1kjLW11lgmTm5DLSmp1l0UiiyFrdDr8X-6QPVinCqGSItOqL8Q4PMDYcrHjOthzPZM4GMcsr-UAVMYacQ_5kc8hJcSB1BYScspdSGPsug5llEtiPLRBr9SOCMHEg8Lk1BM-9HwaQ8QjhpDjMi4c8Pcfi7VnsnACAAA.H4sIAAAAAAAAAAEgAN__nYVB8WZ1PwTG08STPToe-bTO-KGGc13NcdeZejFluOJMnrYXIAAAAA.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loopCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">loopCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;15.0.0&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1346</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://aue1t1z1codbcompretokengen.auth.us-east-1.amazoncognito.com/saml2/idpresponse" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">saml2/idpresponse</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario">
              <collectionProp name="Arguments.arguments">
                <elementProp name="RelayState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RelayState</stringProp>
                  <stringProp name="Argument.value">H4sIAAAAAAAAAD2RS3PaMBSF_4vWCGRJfrEjOBQIbwIx6XQYSZYfYCzXlnHiTv975U13546-e3TnnD-AgTFoaihZraF1XZ6L_EZKdAIDwM3LVBU6KxppRmFGR1gZQxLZtGZxEln3e4TIE9dxaYDIAKnWZT0ejdq2HepaD3mVJal-5PVQqMcoYnXKFasiQ0tDCxX1zrGRx8l6ZWQCxj-BKmWR9UxZqTjLJfg1AKlhEv259GYzJGlQpu9qvs5SdvmoYlqIy-Gtac1GZjDbuzBnmyJEYHSYbb1nF-CHwwPfvTUXlH3Vy80Fh5vvou03bv3n2HaMvBsZkHg9W_i2EFX8LMrutGoO7XHCX0TCY7HYbULd6IdY1_PvJ4aahZ3n5LTdHSCZwPx0D98zH0-CM1rsM87JdHW2yHa36F4XJ2WJcFWi_f7JNM4n4TNQR9Ipks5Wv29YpjmJSsuqg3lKvo7O6wu1ZfXmhgcyxctdNQnLxY_u80Ol9nZ2PUrVV5Sbi1kjLW11lgmTm5DLSmp1l0UiiyFrdDr8X-6QPVinCqGSItOqL8Q4PMDYcrHjOthzPZM4GMcsr-UAVMYacQ_5kc8hJcSB1BYScspdSGPsug5llEtiPLRBr9SOCMHEg8Lk1BM-9HwaQ8QjhpDjMi4c8Pcfi7VnsnACAAA.H4sIAAAAAAAAAAEgAN__nYVB8WZ1PwTG08STPToe-bTO-KGGc13NcdeZejFluOJMnrYXIAAAAA.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="SAMLResponse" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">SAMLResponse</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">560</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.tst.brightmls.com/dashboard" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">dashboard</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">5383</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://matrix.tst.brightmls.com/matrix/m/news" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">matrix/m/news</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://matrix.tst.brightmls.com/Matrix/Login.aspx?passthrough=2&amp;noredirect=1" enabled="true">
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port">0</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">Matrix/Login.aspx</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario">
              <collectionProp name="Arguments.arguments">
                <elementProp name="passthrough" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">passthrough</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="noredirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">noredirect</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="RelayState" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">RelayState</stringProp>
                  <stringProp name="Argument.value">Matrix SAML Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="SAMLResponse" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">SAMLResponse</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Ver Árbol de Resultados" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
